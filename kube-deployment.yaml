# MONGODB

apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:8.2
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

# RABBITMQ

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: 5672
    - name: management
      protocol: TCP
      port: 15672
      targetPort: 15672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.13-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
---

# FASTAPI

apiVersion: v1
kind: ConfigMap
metadata:
  name: api-configmap
data:
  MONGO_URL: "mongodb://mongo-service:27017"
  MONGO_DB_NAME: "channel_service_db"
  RABBITMQ_URL: "amqp://guest:guest@rabbitmq-service:5672/"
  RABBITMQ_MAIN_EXCHANGE: "channel_service_exchange"
  RABBITMQ_MAIN_QUEUE: "channel_service_queue"
  RABBITMQ_DLX: "dlx_exchange"
  RABBITMQ_DLQ: "dlq_queue"
  RABBITMQ_MAX_RETRIES: "20"
  RABBITMQ_RETRY_DELAY: "5"
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  type: LoadBalancer
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: ghcr.io/moxwel/utfsm-arquisw-tareafinal:latest
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: api-configmap
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10 # Equivalente a start_period
            periodSeconds: 5
            failureThreshold: 12 # 10s + (12 * 5s) = 70s para arrancar
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            periodSeconds: 30 # Equivalente a interval
            timeoutSeconds: 5 # Equivalente a timeout
            failureThreshold: 5 # Equivalente a retries
---
